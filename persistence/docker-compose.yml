version: '3.9'

services:
  iaq-influxdb:
    image: influxdb:2.1.1-alpine
    container_name: iaq-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: private
      DOCKER_INFLUXDB_INIT_BUCKET: iaq-bucket
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN}
    restart: "always"
    ports:
      - "127.0.0.1:8086:8086"
    volumes:
      - "influxdb-data:/var/lib/influxdb2"
      - "influxdb-config:/etc/influxdb2"
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  iaq-grafana:
    image: grafana/grafana
    container_name: iaq-grafana
    restart: "always"
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - "grafana-storage:/var/lib/grafana"

  iaq-backend:
    build: "."
    container_name: iaq-backend
    environment:
      DB_URL: http://iaq-influxdb:8086
      DB_TOKEN: ${INFLUXDB_ADMIN_TOKEN}
      DATA_URL: http://r-xps.fritz.box:5000/api/data
      PYTHONUNBUFFERED: 1
    restart: "always"
    depends_on:
      iaq-influxdb:
        condition: service_healthy
    ports:
      - "127.0.0.1:9006:9006"

volumes:
  grafana-storage:
  influxdb-data:
  influxdb-config: